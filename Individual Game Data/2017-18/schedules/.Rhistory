SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Games', 'Bullpen Sessions')
SumTable$Change = SumTable$Games - SumTable$`Bullpen Sessions`
colnames(SumTable) <- c('Games','Bullpen Sessions','Change')
rownames(SumTable) <- c('Pitch Count','Velocity','Spin Rate','Vertical Break','Horizontal Break',
'Release Height','Release Side','Extension')
round(t(SumTable), 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
row_spec(3, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Bullpen Sessions', 'Games')
SumTable$Change = SumTable$`Bullpen Sessions` - SumTable$Games
rownames(SumTable) <- c('Pitch Count','Velocity','Spin Rate','Vertical Break','Horizontal Break',
'Release Height','Release Side','Extension')
round(t(SumTable), 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
row_spec(3, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Bullpen Sessions', 'Games')
SumTable$Change = SumTable$Games - SumTable$`Bullpen Sessions`
rownames(SumTable) <- c('Pitch Count','Velocity','Spin Rate','Vertical Break','Horizontal Break',
'Release Height','Release Side','Extension')
round(t(SumTable), 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
row_spec(3, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Bullpen Sessions', 'Games')
SumTable$Change = SumTable$Games - SumTable$`Bullpen Sessions`
rownames(SumTable) <- c('Pitch Count','Velocity','Spin Rate','Vertical Break','Horizontal Break',
'Release Height','Release Side','Extension')
round(SumTable, 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
row_spec(3, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Bullpen Sessions', 'Games')
SumTable$Change = SumTable$Games - SumTable$`Bullpen Sessions`
rownames(SumTable) <- c('Pitch Count','Velocity','Spin Rate','Vertical Break','Horizontal Break',
'Release Height','Release Side','Extension')
round(SumTable, 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
column_spec(3, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
SpecificTable <- function(PitcherName,PitchShort,PitchLong) {
FilteredGame <- FallTM %>% filter(Pitcher == PitcherName & TaggedPitchType == PitchShort)
FilteredBullpen <- CleanBullpenData %>% filter(AdjPitcher == PitcherName & TaggedPitchType == PitchLong)
FilteredGame <- FilteredGame %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredBullpen <- FilteredBullpen %>% select(colnames(FilteredBullpen)[colnames(FilteredBullpen) %in% colnames(FilteredGame)])
FilteredCombo <- rbind(FilteredGame, FilteredBullpen)
SumTable <- FilteredCombo %>% group_by(Type) %>%
summarise(PitchCount = n(),
Velo = mean(na.omit(RelSpeed)),
Spin = mean(na.omit(SpinRate)),
VB = mean(na.omit(InducedVertBreak)),
HB = mean(na.omit(HorzBreak)),
RH = mean(na.omit(RelHeight)),
RS = mean(na.omit(RelSide)),
Ext = mean(na.omit(Extension)))
SumTable <- as.data.frame(t(SumTable[,-1]))
colnames(SumTable) <- c('Bullpen Sessions', 'Games')
SumTable$Change = SumTable$Games - SumTable$`Bullpen Sessions`
rownames(SumTable) <- c('Pitch Count','Average Velocity','Average Spin Rate','Average Vertical Break','Average Horizontal Break',
'Average Release Height','Average Release Side','Average Extension')
round(SumTable, 2) %>%
kbl(caption = "Bullpen vs Games Overview") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
column_spec(4, bold = TRUE)
}
SpecificTable("Carlson, Max","FB","Fastball")
load("~/UNC Baseball Team/All TM Files/PitchClassificationModel.RData")
expected_metrics_model <- readRDS("C:/Users/ljdub/Downloads/expected_metrics_model.Rds")
View(expected_metrics_model)
load("C:/Users/ljdub/OneDrive/Documents/UNC Baseball Team/All TM Files/PitchClassificationModel.RData")
fwrite(TMdata, "All_Model_Data.csv")
library(dplyr)
library(data.table)
library(readr)
library(formattable)
library(ggplot2)
library(factoextra)
library(cluster)
`%!in%` <- Negate(`%in%`)
fwrite(TMdata, "All_Model_Data.csv")
fwrite(ScaledData, "All_Scaled_Model_Data.csv")
rm(ScaledData, TMdata, TMdata.summary)
#step 2: load in the data you want to make predictions on
NewData <- fread("~/UNC Baseball Team/All TM Files/Baseball practice - Pitching_2022-02-23T182916_Imperial.csv")
# step 3: use the new data to calculate the stats used in the model to make predictions
NewData$HorzApprAngle[NewData$PitcherThrows == 'Right'] <- NewData$HorzApprAngle[NewData$PitcherThrows == 'Right'] * -1
NewData$HorzRelAngle[NewData$PitcherThrows == 'Right'] <- NewData$HorzRelAngle[NewData$PitcherThrows == 'Right'] * -1
NewData$HorzBreak[NewData$PitcherThrows == 'Right'] <- NewData$HorzBreak[NewData$PitcherThrows == 'Right'] * -1
NewData <- NewData %>% mutate(VertBreakperMPH = InducedVertBreak / RelSpeed,
HorzBreakperMPH = HorzBreak / RelSpeed,
SpinperMPH = SpinRate / RelSpeed,
`RelSpeed (ft/s)` = RelSpeed*1.467,
RelRadiansH = HorzRelAngle*(pi/180),
v_0xH = `RelSpeed (ft/s)`*sin(RelRadiansH),
v_0yH = `RelSpeed (ft/s)`*cos(RelRadiansH),
hb_ft = HorzBreak/12,
RelRadiansV = VertRelAngle*(pi/180),
v_0yV = `RelSpeed (ft/s)`*cos(RelRadiansV),
v_0zV = `RelSpeed (ft/s)`*sin(RelRadiansV),
ivb_ft = InducedVertBreak/12,
tH = (40-Extension)/v_0yH,
HorzBreakTunnel = RelSide + hb_ft*((40-Extension)/60.5) + v_0xH*tH,
tV = (40-Extension)/v_0yV,
InducedVertBreakTunnel = RelHeight + ivb_ft*((40-Extension)/60.5) + v_0zV*tV - (32.18504/2)*(tV**2),
HBTperMPH = HorzBreakTunnel / RelSpeed,
IVBTperMPH = InducedVertBreakTunnel / RelSpeed)
#step 4: remove NA values
NewData <- NewData %>% filter(!is.na(VertBreakperMPH),
!is.na(HorzBreakperMPH),
!is.na(SpinperMPH),
!is.na(HBTperMPH),
!is.na(IVBTperMPH),
!is.na(VertApprAngle),
!is.na(HorzApprAngle))
#step 5: select only the stats we need and scale the data so it can be used in the model
NewData.Scaled <- NewData %>% select(VertBreakperMPH, HorzBreakperMPH, SpinperMPH, HBTperMPH, IVBTperMPH,
VertApprAngle, HorzApprAngle)
NewData.Scaled <- scale(NewData.Scaled)
#step 6: run this to make predictions on the new data
library(clue)
newPreds <- cl_predict(kMeansModel, newdata = NewData.Scaled)
#step 7: add the predictions to the original data you loaded in
NewData <- cbind(NewData, newPreds)
NewData <- NewData %>% rename(pitchSubType = newPreds)
#here's a summary of some stats from the bullpen
NewData.summary <- NewData %>% group_by(pitchSubType) %>%
summarise(n = n(),
avgVel = mean(RelSpeed),
avgSpin = mean(SpinRate),
avgIndVertBrk = mean(InducedVertBreak),
avgHorzBrk = mean(HorzBreak)) %>%
mutate(typePct = n / sum(n))
View(NewData)
rm(NewData, NewData.Scaled, NewData.summary, newPreds)
save.image("C:/Users/ljdub/OneDrive/Documents/SubtypeClassifier.RData")
??csv_to_fst()
??fst
load("C:/Users/ljdub/OneDrive/Documents/UNC Baseball Team/All TM Files/PitchClassificationModel.RData")
write.fst(TMdata, "AllModelData.csv", compress = 100)
library(fst)
write.fst(TMdata, "AllModelData.csv", compress = 100)
write.fst(ScaledData, "All_Scaled_Data.csv", compress = 100)
write.fst(as.data.frame(ScaledData), "All_Scaled_Data.csv", compress = 100)
fwrite(as.data.frame(ScaledData), "All_Scaled_Data.csv")
fwrite(TMdata, "All_Model_Data.csv")
test <- read.fst("C:/Users/ljdub/Downloads/expected_metrics_training.fst")
View(test)
library(fst)
AllData <- read.fst("All_Model_Data.fst")
memory.limit(size = 30000)
which(duplicated(AllData[1:200000,]))
unique(AllData[1:200000,])
library(dplyr)
AllData <- AllData %>% select(PitchNo, Date, Time, Pitcher, PitcherId, RelSpeed, SpinRate)
gc()
which(duplicated(AllData[1:200000,]))
which(duplicated(AllData[1:500000,]))
unique(AllData[1:500000,])
which(duplicated(AllData))
AllData[401548:410375,]
which(duplicated(AllData))
duplicates.to.remove <- which(duplicated(AllData))
rm(AllData, allGames, gameData, ids, tempData, testGames, add)
AllData <- read.fst("All_Model_Data.fst")
c(duplicates.to.remove)
AllData <- AllData[c(-duplicates.to.remove), ]
write.fst(AllData, "All_Model_Data.fst", compress = 100)
path <- "C:/Users/ljdub/OneDrive/Documents/UNC Baseball Team/All TM Files"
files <- list.files(path = path, pattern = ".csv")
files <- files[-grep("practice", files, ignore.case = FALSE)]
files <- files[-grep("UNC-BP", files, ignore.case = FALSE)]
duplicated(files)
which(duplicated(files))
library(ncaahoopR)
get_roster("Duke")
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
seasons <- list.files(path = path,
pattern = "")
list.files(path = paste(path, '2016-17', 'schedules', sep = '/'),
pattern = ".csv")
list.files(path = paste(path, '2016-17', 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
library(data.table)
library(purrr)
library(tictoc)
library(iterators)
library(parallelly)
library(doParallel)
list.files(path = paste(path, '2016-17', 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
setwd(paste(path, season, 'schedules', sep = '/'))
setwd(paste(path, '2016-17', 'schedules', sep = '/'))
list.files(path = paste(path, '2016-17', 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
View(ids)
seasons <- paste(sprintf("20%s", 17:21), "-", sprintf("20%s", 18:22), sep = "")
path
path <- paste(path, '2017-18', 'pbp_logs', sep = '/')
path
list.files(path = paste(path, '2017-11-10', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-11-11', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-11-12', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-11-13', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-11-09', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-11-09', sep = '/'), pattern = '.csv') %>% map_df(~fread(.))
list.files(path = paste(path, '2017-11-10', sep = '/'), pattern = '.csv') %>% map_df(~fread(.))
setwd(paste(path, '2017-11-10', sep = '/'))
list.files(path = paste(path, '2017-11-10', sep = '/'), pattern = '.csv') %>% map_df(~fread(.))
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/'))
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/'))
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/'), pattern = '.csv')
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/'))
list.files(paste(path, '2017-18', 'pbp_logs',
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), sep = '/'),
pattern - '.csv')
list.files(path = paste(path, '2017-18', 'pbp_logs',
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), sep = '/'),
pattern - '.csv')
list.files(path = paste(path, '2017-18', 'pbp_logs',
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), sep = '/'),
pattern = '.csv')
list.files(path = paste(path, '2017-18', 'pbp_logs',
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), sep = '/'),
pattern = '.csv') %>% map_df(~fread(.))
paste(path, '2017-18', 'pbp_logs', list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), (list.files(path = paste(path, '2017-18', 'pbp_logs',
list.files(path = paste(path, '2017-18', 'pbp_logs', sep = '/')), sep = '/'),
pattern = '.csv')))
getFilePaths <- function(x){
paste(path, x, 'pbp_logs', sep = '/')
}
getFilePaths('2017-18')
paste(getSeasonFilePaths('2017-18'), list.files(path = getSeasonFilePaths('2017-18')), (list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'),
pattern = '.csv')))
getSeasonFilePath <- function(x){
paste(path, x, 'pbp_logs', sep = '/')
}
getSeasonFilePath('2017-18')
list.files(path = getSeasonFilePath('2017-18'))
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'),
pattern = '.csv')
list.files(path = getSeasonFilePath('2017-18')), (list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'),
pattern = '.csv'))
(list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'),
pattern = '.csv'))
list.files(path = getSeasonFilePath('2017-18'))
paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')),
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv'))
paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')),
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv')) %>% map_df(~fread(.))
warnings()
paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')),
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv'),
sep = '/')
paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')),
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv'),
sep = '/') %>% map_df(~fread(.))
getwd()
setwd(path)
getwd()
paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')),
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv'),
sep = '/') %>% map_df(~fread(.))
list.files(path = getSeasonFilePath('2017-18'))
list.files(path = paste(getSeasonFilePath('2017-18'),
list.files(path = getSeasonFilePath('2017-18')), sep = '/'), pattern = '.csv')
df <- data.table()
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
for (season in seasons) {
setwd(paste(path, season, 'schedules', sep = '/'))
testData <- list.files(path = paste(path, season, 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
testData$season <- as.character(season)
testData <- testData %>% mutate(pbpFile = paste(paste(path, season, 'pbp_logs', date, game_id, sep = '/'), '.csv', sep = ''))
df <- rbind(df, testData, fill = TRUE)
}
getwd()
c(2017-11-01:2018:05-01)
2017-11-01:2018:05-01
seq.Date(as.Date("2017/11/01"), as.Date("2018/05/01"), by = 'day')
paste(season[1], "/11/01")
paste(season[1], "/11/01", sep = '')
paste(sprintf("20%s", 17:21)[1], "/11/01", sep = '')
season[1]
substr(season[1], 1, 4)
seq.Date(as.Date(paste(substr(seasons[1], 1, 4), "/11/01", sep = '/')), as.Date(paste(substr(seasons[1], 6, 9), "/05/01", sep = '/')), by = 'day')
seq.Date(as.Date(paste(substr(seasons[1], 1, 4), "/11/01", sep = '/')), as.Date(paste(substr(seasons[1], 6, 9), "/05/01", sep = '/')), by = 'day')
as.Date(paste(substr(seasons[1], 1, 4), "/11/01", sep = '/'))
paste(substr(seasons[1], 1, 4), "/11/01", sep = '/')
seq.Date(as.Date(paste(substr(seasons[1], 1, 4), "/11/01", sep = '')), as.Date(paste(substr(seasons[1], 6, 9), "/05/01", sep = '')), by = 'day')
# devtools::install_github("lbenz730/ncaahoopR")
library(ncaahoopR)
library(data.table)
library(purrr)
library(tictoc)
library(iterators)
library(parallelly)
library(doParallel)
memory.size(max=20000)
seasons <- paste(sprintf("20%s", 17:21), "-", sprintf("20%s", 18:22), sep = "")
# allGames <- c()
#
# for (team in ids$team){
#
#   for (season in seasons){
#
#     add <- get_game_ids(team, season)
#     allGames <- c(allGames, add[ ! add %chin% allGames ])
#
#   }
#
# }
no_cores <- availableCores() - 1
# registerDoParallel(no_cores)
# tic()
# out <- foreach(i = ids$team, .packages='ncaahoopR', .combine = rbind,
#                .errorhandling = 'remove', .inorder = FALSE) %dopar% {
#
#                  sapply(seasons, get_pbp, team = i)
#
# }
# toc()
#
# gameDF <- data.frame()
#
# # catchErrors(allGames[1])
#
# for (i in 1:length(gameData)){
#
#   if(typeof(gameData[[i]]) == 'list'){
#
#     gameDF <- rbind(gameDF, gameData[[i]])
#
#   }
# }
data(ids)
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
df <- data.table()
for (season in seasons) {
setwd(paste(path, season, 'schedules', sep = '/'))
testData <- list.files(path = paste(path, season, 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
testData$season <- as.character(season)
testData <- testData %>% mutate(pbpFile = paste(paste(path, season, 'pbp_logs', date, game_id, sep = '/'), '.csv', sep = ''))
df <- rbind(df, testData, fill = TRUE)
}
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
paste(path, season, 'schedules', sep = '/')
setwd(paste(path, season, 'schedules', sep = '/'))
setwd(paste(path, '2017-18', 'schedules', sep = '/'))
# devtools::install_github("lbenz730/ncaahoopR")
library(ncaahoopR)
library(data.table)
library(purrr)
library(tictoc)
library(iterators)
library(parallelly)
library(doParallel)
memory.size(max=20000)
seasons <- paste(sprintf("20%s", 17:21), "-", sprintf("20%s", 18:22), sep = "")
# allGames <- c()
#
# for (team in ids$team){
#
#   for (season in seasons){
#
#     add <- get_game_ids(team, season)
#     allGames <- c(allGames, add[ ! add %chin% allGames ])
#
#   }
#
# }
no_cores <- availableCores() - 1
# registerDoParallel(no_cores)
# tic()
# out <- foreach(i = ids$team, .packages='ncaahoopR', .combine = rbind,
#                .errorhandling = 'remove', .inorder = FALSE) %dopar% {
#
#                  sapply(seasons, get_pbp, team = i)
#
# }
# toc()
#
# gameDF <- data.frame()
#
# # catchErrors(allGames[1])
#
# for (i in 1:length(gameData)){
#
#   if(typeof(gameData[[i]]) == 'list'){
#
#     gameDF <- rbind(gameDF, gameData[[i]])
#
#   }
# }
data(ids)
path <- "C:/Users/ljdub/Downloads/ncaahoopR_data-master/ncaahoopR_data-master"
df <- data.table()
for (season in seasons) {
setwd(paste(path, season, 'schedules', sep = '/'))
testData <- list.files(path = paste(path, season, 'schedules', sep = '/'),
pattern = ".csv") %>% map_df(~fread(.))
testData$season <- as.character(season)
testData <- testData %>% mutate(pbpFile = paste(paste(path, season, 'pbp_logs', date, game_id, sep = '/'), '.csv', sep = ''))
df <- rbind(df, testData, fill = TRUE)
}
